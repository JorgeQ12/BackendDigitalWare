// <auto-generated />
using System;
using GamblingBackDW;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamblingBackDW.Migrations
{
    [DbContext(typeof(DbContextGamblingDW))]
    [Migration("20240201220953_DwDataBaseV1")]
    partial class DwDataBaseV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Gamblings", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("IdSession")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSessionPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScoreTeamA")
                        .HasColumnType("int");

                    b.Property<int>("ScoreTeamB")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdSession");

                    b.HasIndex("IdSessionPerson");

                    b.ToTable("Gamblings");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Matches", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("IdTeamA")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTeamB")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScoreTeamA")
                        .HasColumnType("int");

                    b.Property<int>("ScoreTeamB")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdTeamA");

                    b.HasIndex("IdTeamB");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("IdMatches")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IdMatches");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.SessionPerson", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSession")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonIdentification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IdSession");

                    b.ToTable("SessionPerson");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Teams", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Gamblings", b =>
                {
                    b.HasOne("GamblingBackDW.Domain.Entities.Session", "Session")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamblingBackDW.Domain.Entities.SessionPerson", "SessionPerson")
                        .WithMany()
                        .HasForeignKey("IdSessionPerson")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("SessionPerson");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Matches", b =>
                {
                    b.HasOne("GamblingBackDW.Domain.Entities.Teams", "TeamA")
                        .WithMany()
                        .HasForeignKey("IdTeamA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamblingBackDW.Domain.Entities.Teams", "TeamB")
                        .WithMany()
                        .HasForeignKey("IdTeamB")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Session", b =>
                {
                    b.HasOne("GamblingBackDW.Domain.Entities.Matches", "Matches")
                        .WithMany("Sessions")
                        .HasForeignKey("IdMatches")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.SessionPerson", b =>
                {
                    b.HasOne("GamblingBackDW.Domain.Entities.Session", "Session")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GamblingBackDW.Domain.Entities.Matches", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
